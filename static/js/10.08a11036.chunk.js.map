{"version":3,"sources":["components/Page.js","actions/VacunoActions.js","pages/RegistrarVacuno.js"],"names":["bem","bn","create","Page","_ref","title","breadcrumbs","Tag","tag","className","children","restProps","Object","C_Users_OMEN_Desktop_Hernan_proyectos_MiGanado_Front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","classes","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","_BtnRegresar__WEBPACK_IMPORTED_MODULE_7__","assign","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","type","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","defaultProps","__webpack_require__","d","__webpack_exports__","listadoAnimales","listadoTiposVacunos","eliminarVacuno","crearEditarVacuno","vacunoSeleccionado","_actionstypes_types__WEBPACK_IMPORTED_MODULE_0__","VACUNO_LIST_REQUEST","payload","TIPOS_VACUNOS_LIST_REQUEST","id","VACUNO_DELETE_REQUEST","nombre","fecha_nacimiento","sexo","tipo","color","estado","fechaVenta","imagen","accion","VACUNO_CREATE_REQUEST","VACUNO_EDIT_REQUEST","VACUNO_SELECTED","RegistrarVacuno","props","tipos_vacunos","useSelector","store","vacuno","url_imagenes","loading","errores","vacunoCreatedEdited","vacunoEditado","_useState","useState","_useState2","C_Users_OMEN_Desktop_Hernan_proyectos_MiGanado_Front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","cambiaNombre","_useState3","_useState4","cambiaFechaNacimiento","_useState5","_useState6","cambiaSexo","_useState7","_useState8","cambiaTipo","_useState9","_useState10","cambiaColor","_useState11","_useState12","cambiaEstado","_useState13","_useState14","cambiaFechaVenta","_useState15","_useState16","srcImagen","cambiaSrc","esquemaValidacion","Yup","shape","min","max","required","dispatch","useDispatch","useEffect","actions","Swal","fire","html","icon","timer","confirmButtonText","then","result","isConfirmed","history","push","react__WEBPACK_IMPORTED_MODULE_2___default","components_Page__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","formik__WEBPACK_IMPORTED_MODULE_20__","enableReinitialize","validateOnBlur","validationSchema","initialValues","imagen_vacuno","validate","values","errors","document","querySelector","files","onSubmit","getElementById","value","handleSubmit","reactstrap__WEBPACK_IMPORTED_MODULE_8__","md","reactstrap__WEBPACK_IMPORTED_MODULE_9__","for","alt","src","height","width","Math","random","reactstrap__WEBPACK_IMPORTED_MODULE_10__","onChange","URL","createObjectURL","target","reactstrap__WEBPACK_IMPORTED_MODULE_11__","react_icons_fa__WEBPACK_IMPORTED_MODULE_21__","val","tip_vac","nombre_tipo_vacuno","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","_components_PageSpinner__WEBPACK_IMPORTED_MODULE_17__"],"mappings":"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","file":"static/js/10.08a11036.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'utils/propTypes';\r\n\r\nimport bn from 'utils/bemnames';\r\n\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport Typography from './Typography';\r\nimport BtnRegresar from './BtnRegresar';\r\n\r\nconst bem = bn.create('page');\r\n\r\nconst Page = ({\r\n  title,\r\n  breadcrumbs,\r\n  tag: Tag,\r\n  className,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const classes = bem.b('px-3', className);\r\n\r\n  return (\r\n    <>\r\n      <BtnRegresar />\r\n      <Tag className={classes} {...restProps}>\r\n        <div className={bem.e('header')}>\r\n          {title && typeof title === 'string' ? (\r\n            <Typography type=\"h1\" className={bem.e('title')}>\r\n              {title}\r\n            </Typography>\r\n          ) : (\r\n            title\r\n          )}\r\n          {breadcrumbs && (\r\n            <Breadcrumb className={bem.e('breadcrumb')}>\r\n              <BreadcrumbItem>Home</BreadcrumbItem>\r\n              {breadcrumbs.length &&\r\n                breadcrumbs.map(({ name, active }, index) => (\r\n                  <BreadcrumbItem key={index} active={active}>\r\n                    {name}\r\n                  </BreadcrumbItem>\r\n                ))}\r\n            </Breadcrumb>\r\n          )}\r\n        </div>\r\n        {children}\r\n      </Tag>\r\n    </>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  tag: PropTypes.component,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      active: PropTypes.bool,\r\n    }),\r\n  ),\r\n};\r\n\r\nPage.defaultProps = {\r\n  tag: 'div',\r\n  title: '',\r\n};\r\n\r\nexport default Page;\r\n","import {\r\n  VACUNO_LIST_REQUEST,\r\n  TIPOS_VACUNOS_LIST_REQUEST,\r\n  VACUNO_SELECTED,\r\n  RESET,\r\n  VACUNO_CREATE_REQUEST,\r\n  VACUNO_EDIT_REQUEST,\r\n  VACUNO_DELETE_REQUEST,\r\n  //VACUNO_CREATE_REQUEST,\r\n  //VACUNO_EDIT_REQUEST,\r\n} from '../actionstypes/types';\r\n\r\nexport const listadoAnimales = () => ({\r\n  type: VACUNO_LIST_REQUEST,\r\n  payload: {},\r\n});\r\n\r\nexport const listadoTiposVacunos = () => ({\r\n  type: TIPOS_VACUNOS_LIST_REQUEST,\r\n  payload: {},\r\n});\r\n\r\nexport const eliminarVacuno = id => ({\r\n  type: VACUNO_DELETE_REQUEST,\r\n  payload: id,\r\n});\r\n\r\nexport const crearEditarVacuno = (\r\n  id,\r\n  nombre,\r\n  fecha_nacimiento,\r\n  sexo,\r\n  tipo,\r\n  color,\r\n  estado,\r\n  fechaVenta,\r\n  imagen,\r\n  accion,\r\n) => ({\r\n  type:\r\n    accion === VACUNO_CREATE_REQUEST\r\n      ? VACUNO_CREATE_REQUEST\r\n      : VACUNO_EDIT_REQUEST,\r\n  payload: {\r\n    id,\r\n    nombre,\r\n    fecha_nacimiento,\r\n    sexo,\r\n    tipo,\r\n    color,\r\n    estado,\r\n    fechaVenta,\r\n    imagen,\r\n    accion,\r\n  },\r\n});\r\n\r\nexport const vacunoSeleccionado = vacunoSeleccionado => ({\r\n  type: VACUNO_SELECTED,\r\n  payload: vacunoSeleccionado,\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: RESET,\r\n});\r\n","import Page from 'components/Page';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Row,\r\n  Spinner,\r\n  Button,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  FormText,\r\n} from 'reactstrap';\r\nimport * as Yup from 'yup';\r\nimport * as actions from '../actions/VacunoActions';\r\nimport 'jspdf-autotable';\r\nimport PageSpinner from '../components/PageSpinner';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n  VACUNO_CREATE_REQUEST,\r\n  VACUNO_EDIT_REQUEST,\r\n} from '../actionstypes/types';\r\nimport { Formik } from 'formik';\r\nimport { FaInfo } from 'react-icons/fa';\r\nconst RegistrarVacuno = props => {\r\n  //var contenidoImagen = document.getElementById('imagen_vacuno').value;\r\n  // const styles = {\r\n  //   // exampleImageInput: {\r\n  //   //   cursor: 'pointer',\r\n  //   //   position: 'absolute',\r\n  //   //   top: '0',\r\n  //   //   bottom: '0',\r\n  //   //   right: '0',\r\n  //   //   left: '0',\r\n  //   //   width: '100%',\r\n  //   //   opacity: '0',\r\n  //   // },\r\n  //   imagen_vacuno: {\r\n  //     display: 'none',\r\n  //   },\r\n  //   boton_imagen_vacuno: {\r\n  //     border: '1px solid #ccc',\r\n  //     display: 'inline-block',\r\n  //     padding: '6px 12px',\r\n  //     cursor: 'pointer',\r\n  //     backgroundColor: '#fb2a55',\r\n  //     color: 'white',\r\n  //     borderRadius: '0.25rem',\r\n  //   },\r\n  // };\r\n  var tipos_vacunos = useSelector(store => store.vacuno.tipos_vacunos);\r\n  var url_imagenes = useSelector(store => store.vacuno.url_imagenes);\r\n  var loading = useSelector(store => store.vacuno.loading);\r\n  var errores = useSelector(store => store.vacuno.errores);\r\n  var vacunoCreatedEdited = useSelector(\r\n    store => store.vacuno.vacunoCreatedEdited,\r\n  );\r\n  var vacunoEditado = useSelector(store => store.vacuno.vacunoEditado);\r\n  const [nombre, cambiaNombre] = useState(vacunoEditado.nombre);\r\n  const [fecha_nacimiento, cambiaFechaNacimiento] = useState(\r\n    vacunoEditado.fecha_nacimiento,\r\n  );\r\n  const [sexo, cambiaSexo] = useState(vacunoEditado.sexo);\r\n  const [tipo, cambiaTipo] = useState(vacunoEditado.tipo);\r\n  const [color, cambiaColor] = useState(vacunoEditado.color);\r\n  const [estado, cambiaEstado] = useState(vacunoEditado.estado);\r\n  const [fechaVenta, cambiaFechaVenta] = useState(vacunoEditado.fechaVenta);\r\n  const [srcImagen, cambiaSrc] = useState('');\r\n  var accion;\r\n  if (vacunoEditado.id > 0) {\r\n    accion = VACUNO_EDIT_REQUEST;\r\n  } else {\r\n    accion = VACUNO_CREATE_REQUEST;\r\n  }\r\n  const esquemaValidacion = Yup.object().shape({\r\n    nombre: Yup.string()\r\n      .min(4, 'Mínimo 4 caracteres')\r\n      .max(16, 'Máximo 16 caracteres')\r\n      .required('El campo nombre es requerido'),\r\n    fecha_nacimiento: Yup.string().required(\r\n      'El campo fecha de nacimiento es requerido',\r\n    ),\r\n    sexo: Yup.string().required('El campo sexo es requerido'),\r\n    tipo: Yup.number().required('El campo tipo es requerido'),\r\n    color: Yup.string().required('El campo color es requerido'),\r\n    estado: Yup.string().required('El campo estado es requerido'),\r\n    //email: Yup.string().email('Invalid email').required('Required'),\r\n  });\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (tipos_vacunos.length === 0) {\r\n      dispatch(actions.listadoTiposVacunos()); //se ejecuta una sola vez porque al primer render actualiza el store y la condición nunca más se ejecuta\r\n    }\r\n  }, []);\r\n  if (vacunoCreatedEdited && !loading) {\r\n    Swal.fire({\r\n      html:\r\n        vacunoEditado.id > 0\r\n          ? 'Vacuno editado correctamente'\r\n          : 'Vacuno agregado correctamente',\r\n      icon: 'success',\r\n      timer: 4000,\r\n      confirmButtonText: 'Aceptar',\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        props.history.push('listado_vacunos');\r\n      }\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    if (!loading && errores) {\r\n      Swal.fire({\r\n        html: errores,\r\n        icon: 'error',\r\n        confirmButtonText: 'Aceptar',\r\n      });\r\n    }\r\n  }, [loading]);\r\n  return (\r\n    <Page\r\n      title={vacunoEditado.id > 0 ? 'Editar vacuno' : 'Registrar vacuno'}\r\n      breadcrumbs={[\r\n        {\r\n          name: vacunoEditado.id > 0 ? 'editar' : 'registrar',\r\n          active: true,\r\n        },\r\n      ]}\r\n      className=\"TablePage\"\r\n    >\r\n      <Row>\r\n        <Col>\r\n          {tipos_vacunos.length > 0 ? (\r\n            <>\r\n              <Card className=\"mb-3\">\r\n                <CardBody>\r\n                  <Formik\r\n                    enableReinitialize\r\n                    validateOnBlur={false}\r\n                    //validateOnChange={false}\r\n                    validationSchema={esquemaValidacion}\r\n                    initialValues={{\r\n                      id: vacunoEditado.id,\r\n                      nombre,\r\n                      fecha_nacimiento,\r\n                      sexo,\r\n                      tipo,\r\n                      color,\r\n                      estado,\r\n                      fechaVenta,\r\n                      imagen_vacuno: '',\r\n                    }}\r\n                    validate={values => {\r\n                      const errors = {};\r\n                      let imagen =\r\n                        document.querySelector('input[type=\"file\"]').files[0];\r\n                      if (!imagen && vacunoEditado.id === 0) {\r\n                        errors.imagen_vacuno = 'Debe seleccionar una imagen';\r\n                      }\r\n                      return errors;\r\n                    }}\r\n                    onSubmit={values => {\r\n                      var nombre = values.nombre;\r\n                      var fecha_nacimiento = values.fecha_nacimiento;\r\n                      var sexo = values.sexo;\r\n                      var tipo = values.tipo;\r\n                      var color = values.color;\r\n                      var estado = values.estado;\r\n                      var fechaVenta =\r\n                        document.getElementById('fechaVenta').value;\r\n                      let imagen =\r\n                        document.querySelector('input[type=\"file\"]').files[0];\r\n                      dispatch(\r\n                        actions.crearEditarVacuno(\r\n                          vacunoEditado.id,\r\n                          nombre,\r\n                          fecha_nacimiento,\r\n                          sexo,\r\n                          tipo,\r\n                          color,\r\n                          estado,\r\n                          fechaVenta,\r\n                          imagen,\r\n                          accion,\r\n                        ),\r\n                      );\r\n                    }}\r\n                  >\r\n                    {props => (\r\n                      <form onSubmit={props.handleSubmit}>\r\n                        <FormGroup>\r\n                          {vacunoEditado.id > 0 ? (\r\n                            <>\r\n                              <Row>\r\n                                {srcImagen && (\r\n                                  <Col md={3}>\r\n                                    <Label for=\"imagen_seleccionada\">\r\n                                      Imagen seleccionada:\r\n                                    </Label>\r\n                                    {'               '}\r\n                                    <img\r\n                                      alt=\"\"\r\n                                      src={srcImagen}\r\n                                      height={100}\r\n                                      width={100}\r\n                                      id=\"imagen_seleccionada\"\r\n                                    />\r\n                                  </Col>\r\n                                )}\r\n                                <Col md=\"3\">\r\n                                  <Label for=\"\">Imagen actual: </Label>\r\n                                  {'               '}\r\n                                  <img\r\n                                    alt={vacunoEditado.id + '.jpg'}\r\n                                    height={100}\r\n                                    width={100}\r\n                                    src={\r\n                                      url_imagenes +\r\n                                      vacunoEditado.id +\r\n                                      '.jpg?dummy=' +\r\n                                      Math.random() * 1000\r\n                                    }\r\n                                  />\r\n                                </Col>\r\n                              </Row>\r\n                              <Label for=\"\">Seleccione una nueva imagen</Label>\r\n                              <Input\r\n                                id=\"imagen_vacuno\"\r\n                                name=\"imagen_vacuno\"\r\n                                //style={styles.imagen_vacuno}\r\n                                type=\"file\"\r\n                                onChange={e =>\r\n                                  cambiaSrc(\r\n                                    URL.createObjectURL(e.target.files[0]),\r\n                                  )\r\n                                }\r\n                              />\r\n                              <FormText>\r\n                                <FaInfo />\r\n                                {'   '}\r\n                                La imagen seleccionada reemplazará la imagen\r\n                                actual\r\n                              </FormText>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {srcImagen && (\r\n                                <>\r\n                                  <Label for=\"imagen_seleccionada\">\r\n                                    Imagen seleccionada:\r\n                                  </Label>\r\n                                  {'               '}\r\n                                  <img\r\n                                    alt=\"\"\r\n                                    src={srcImagen}\r\n                                    height={100}\r\n                                    width={100}\r\n                                    id=\"imagen_seleccionada\"\r\n                                  />\r\n                                </>\r\n                              )}\r\n                              <br />\r\n                              <Label for=\"imagen_vacuno\">\r\n                                Seleccione imagen\r\n                              </Label>\r\n                              <Input\r\n                                onChange={e =>\r\n                                  cambiaSrc(\r\n                                    URL.createObjectURL(e.target.files[0]),\r\n                                  )\r\n                                }\r\n                                type=\"file\"\r\n                                name=\"imagen_vacuno\"\r\n                                id=\"imagen_vacuno\"\r\n                              />\r\n                            </>\r\n                          )}\r\n                          {props.errors.imagen_vacuno && (\r\n                            <span className=\"text-danger text-small d-block mb-2\">\r\n                              {props.errors.imagen_vacuno}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"nombre\">Nombre</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={e => {\r\n                              cambiaNombre(e.target.value);\r\n                            }}\r\n                            value={props.values.nombre}\r\n                            name=\"nombre\"\r\n                            id=\"nombre\"\r\n                          />\r\n                          {props.errors.nombre && (\r\n                            <span className=\"text-danger text-small d-block mb-2\">\r\n                              {props.errors.nombre}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"fecha_nacimiento\">Fecha nacimiento</Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            onChange={e => {\r\n                              cambiaFechaNacimiento(e.target.value);\r\n                            }}\r\n                            value={props.values.fecha_nacimiento}\r\n                            name=\"fecha_nacimiento\"\r\n                            id=\"fecha_nacimiento\"\r\n                          />\r\n                          {props.errors.fecha_nacimiento && (\r\n                            <span className=\"text-danger text-small d-block mb-9\">\r\n                              {props.errors.fecha_nacimiento}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"sexo\">Sexo</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            id=\"sexo\"\r\n                            name=\"sexo\"\r\n                            onChange={e => {\r\n                              cambiaSexo(e.target.value);\r\n                            }}\r\n                            value={props.values.sexo}\r\n                          >\r\n                            <option val=\"\">Seleccione</option>\r\n                            <option val=\"1\">Macho</option>\r\n                            <option val=\"2\">Hembra</option>\r\n                          </Input>\r\n                          {props.errors.sexo && (\r\n                            <span className=\"text-danger text-small d-block mb-2\">\r\n                              {props.errors.sexo}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"tipo\">Tipo</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            id=\"tipo\"\r\n                            name=\"tipo\"\r\n                            onChange={e => {\r\n                              cambiaTipo(e.target.value);\r\n                            }}\r\n                            value={props.values.tipo}\r\n                          >\r\n                            <option val=\"\">Seleccione</option>\r\n                            {tipos_vacunos.map(tip_vac => {\r\n                              return (\r\n                                <option key={tip_vac.id} value={tip_vac.id}>\r\n                                  {tip_vac.nombre_tipo_vacuno}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </Input>\r\n                          {props.errors.tipo && (\r\n                            <span className=\"text-danger text-small d-block mb-2\">\r\n                              {props.errors.tipo}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"color\">Color</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            id=\"color\"\r\n                            name=\"color\"\r\n                            onChange={e => {\r\n                              cambiaColor(e.target.value);\r\n                            }}\r\n                            value={props.values.color}\r\n                          >\r\n                            <option val=\"\">Seleccione</option>\r\n                            <option val=\"1\">Clavel(a)</option>\r\n                            <option val=\"2\">Overo(a)</option>\r\n                            <option val=\"3\">Blanco(a)</option>\r\n                            <option val=\"4\">Colorado(a)</option>\r\n                            <option val=\"5\">Amarillo(a)</option>\r\n                          </Input>\r\n                          {props.errors.color && (\r\n                            <span className=\"text-danger text-small d-block mb-2\">\r\n                              {props.errors.color}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"estado\">Estado</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            id=\"estado\"\r\n                            name=\"estado\"\r\n                            onChange={e => {\r\n                              cambiaEstado(e.target.value);\r\n                            }}\r\n                            value={props.values.estado}\r\n                          >\r\n                            <option val=\"\">Seleccione</option>\r\n                            <option val=\"1\">Vivo</option>\r\n                            <option val=\"2\">Muerto</option>\r\n                          </Input>\r\n                          {props.errors.estado && (\r\n                            <span className=\"text-danger text-small d-block mb-2\">\r\n                              {props.errors.estado}\r\n                            </span>\r\n                          )}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"fechaVenta\">Fecha venta (opcional)</Label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            name=\"fechaVenta\"\r\n                            id=\"fechaVenta\"\r\n                            placeholder=\"Ej: 2021-04-06\"\r\n                            onChange={e => {\r\n                              cambiaFechaVenta(e.target.value);\r\n                            }}\r\n                            value={props.values.fechaVenta}\r\n                          />\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" className=\"ml-10\">\r\n                          {vacunoEditado.id > 0 ? (\r\n                            !loading ? (\r\n                              'Editar vacuno'\r\n                            ) : (\r\n                              <>\r\n                                {'Editando vacuno...  '}\r\n                                <Spinner />\r\n                              </>\r\n                            )\r\n                          ) : !loading ? (\r\n                            'Registrar vacuno'\r\n                          ) : (\r\n                            <>\r\n                              {'Registrando vacuno...  '}\r\n                              <Spinner />\r\n                            </>\r\n                          )}\r\n                        </Button>\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n                </CardBody>\r\n              </Card>\r\n            </>\r\n          ) : (\r\n            <PageSpinner />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegistrarVacuno;\r\n"],"sourceRoot":""}